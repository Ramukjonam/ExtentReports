<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" total="3" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="12059" started-at="2018-03-29T10:15:50Z" finished-at="2018-03-29T10:16:03Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="12059" started-at="2018-03-29T10:15:50Z" finished-at="2018-03-29T10:16:03Z">
      <class name="SoftwareTestingMaterial.ExtentReportsClass">
        <test-method status="PASS" signature="startReport()[pri:0, instance:SoftwareTestingMaterial.ExtentReportsClass@1c62251]" name="startReport" is-config="true" duration-ms="474" started-at="2018-03-29T15:45:51Z" finished-at="2018-03-29T15:45:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="FAIL" signature="failTest()[pri:0, instance:SoftwareTestingMaterial.ExtentReportsClass@1c62251]" name="failTest" duration-ms="10386" started-at="2018-03-29T15:45:51Z" finished-at="2018-03-29T15:46:01Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [NoTitle] but found [https://www.softwaretestingmaterial.com/]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [NoTitle] but found [https://www.softwaretestingmaterial.com/]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at org.testng.Assert.assertEquals(Assert.java:188)
	at SoftwareTestingMaterial.ExtentReportsClass.failTest(ExtentReportsClass.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)
	at org.testng.TestNG.run(TestNG.java:1018)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:SoftwareTestingMaterial.ExtentReportsClass@1c62251]" name="getResult" is-config="true" duration-ms="680" started-at="2018-03-29T15:46:01Z" finished-at="2018-03-29T15:46:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=failTest status=FAILURE method=ExtentReportsClass.failTest()[pri:0, instance:SoftwareTestingMaterial.ExtentReportsClass@1c62251] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="passTest()[pri:0, instance:SoftwareTestingMaterial.ExtentReportsClass@1c62251]" name="passTest" duration-ms="1" started-at="2018-03-29T15:46:02Z" finished-at="2018-03-29T15:46:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:SoftwareTestingMaterial.ExtentReportsClass@1c62251]" name="getResult" is-config="true" duration-ms="1" started-at="2018-03-29T15:46:02Z" finished-at="2018-03-29T15:46:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passTest status=SUCCESS method=ExtentReportsClass.passTest()[pri:0, instance:SoftwareTestingMaterial.ExtentReportsClass@1c62251] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="SKIP" signature="skipTest()[pri:0, instance:SoftwareTestingMaterial.ExtentReportsClass@1c62251]" name="skipTest" duration-ms="1" started-at="2018-03-29T15:46:02Z" finished-at="2018-03-29T15:46:02Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping - This is not ready for testing ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping - This is not ready for testing 
	at SoftwareTestingMaterial.ExtentReportsClass.skipTest(ExtentReportsClass.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)
	at org.testng.TestNG.run(TestNG.java:1018)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skipTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:SoftwareTestingMaterial.ExtentReportsClass@1c62251]" name="getResult" is-config="true" duration-ms="0" started-at="2018-03-29T15:46:02Z" finished-at="2018-03-29T15:46:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=skipTest status=SKIP method=ExtentReportsClass.skipTest()[pri:0, instance:SoftwareTestingMaterial.ExtentReportsClass@1c62251] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:SoftwareTestingMaterial.ExtentReportsClass@1c62251]" name="endReport" is-config="true" duration-ms="478" started-at="2018-03-29T15:46:02Z" finished-at="2018-03-29T15:46:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- SoftwareTestingMaterial.ExtentReportsClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
